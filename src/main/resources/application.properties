# ===============================
# DATABASE CONFIGURATION
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/cashe
spring.datasource.username=cashe
spring.datasource.password=pass
spring.datasource.driver-class-name=org.postgresql.Driver
# ===============================
# JPA/HIBERNATE CONFIGURATION
# ===============================
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Opciones para ddl-auto: none, validate, update, create, create-drop
# Usar 'validate' o 'none' en producción. 'update' o 'create' para desarrollo inicial.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# Muestra las SQL generadas por Hibernate (útil para debug)
spring.jpa.properties.hibernate.format_sql=true # Formatea las SQL mostradas
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true # Necesario para PostgreSQL con LOBs a veces
# ===============================
# SERVER CONFIGURATION
# ===============================
server.port=8080
# Puerto por defecto para Spring Boot
# server.error.include-stacktrace=never # Para no exponer stacktraces en producción
# ===============================
# SPRINGDOC (OpenAPI) CONFIGURATION
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.url=/api-docs
springdoc.swagger-ui.operations-sorter=alpha
springdoc.swagger-ui.tags-sorter=alpha
springdoc.show-actuator=true
# ===============================
# JWT CONFIGURATION (Placeholder - se usarán más en la configuración de seguridad)
# ===============================
# jwt.secret=YourSuperSecretKeyForJWTsWhichShouldBeLongAndComplexAndStoredSecurely
# jwt.expiration-ms=86400000 # 24 horas
# jwt.refresh-token.expiration-ms=604800000 # 7 días
# ===============================
# ACTUATOR (Opcional, para monitoreo)
# ===============================
# management.endpoints.web.exposure.include=health,info,metrics 
# File Upload Configuration
file.upload-dir=./uploads
# ===============================
# OAUTH2 CLIENT CONFIGURATION
# ===============================
spring.security.oauth2.client.registration.google.client-id=1044858491720-0nlva682mir716c13gru88sfdnvook86.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
# ===============================
# SPRING OUTPUT CONFIGURATION
# ===============================
spring.output.ansi.enabled=always
spring.mandatory-file-encoding=UTF-8
logging.charset.console=UTF-8